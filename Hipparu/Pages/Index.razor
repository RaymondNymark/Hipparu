@page "/"
@using Hipparu.Shared
@using Plk.Blazor.DragDrop
@inject HttpClient Http

<div class="@menuVisibility">
<h3>Best times</h3>
    <table>
        <tbody>
            <tr>
                <td>Hiragana</td>
                <td>Katakana</td>
                <td>Mixed</td>
            </tr>
            <tr>
                <td>@bestHiraganaTime</td>
                <td>@bestKatakanaTime</td>
                <td>@bestMixedTime</td>
            </tr>
        </tbody>
    </table>
    <button class="btn btn-primary" @onclick="()=>SelectMode(1)">Hiragana</button>
    <button class="btn btn-primary" @onclick="()=>SelectMode(2)">Katakana</button>
    <button class="btn btn-primary" @onclick="()=>SelectMode(3)">Mixed</button>
</div>
<br />
<div class="@gameVisibility">
    @if (LastDropped != null)
    {
        <div class="bg-warning">That's not where  @LastDropped?.HiraganaScript goes.</div>
    }
    @if (ActiveMaxItemWarning)
    {
        <div class="bg-warning">You've already populated this square.</div>
    }
    @if (PlacingItemBackWarning)
    {
        <div class="bg-warning">You can't place items back in the answer list.</div>
    }
    @if (HasWonGame)
    {
        <div class="bg-success">You did the thing.</div>
    }
    <p>@gameTimer</p>
    <div class="plk-flex">
        <Dropzone class="flex-container" Items="AnswerList" TItem="AnswerItem" OnItemDropRejected="ShowPlacingBackWarning" Accepts='(d, t) => d.RomajiScript.Equals("This Dropzone is only for one way but we cant outright disable accepting things so we only accept this message instead")'>
            <div class="flex-item">
                @if (textState == TextState.HiraganaMode)
                {
                    @context.HiraganaScript 
                }
                else
                {
                    @context.KatakanaScript
                }
            </div>   
        </Dropzone>
    </div>
    <div class="divTable blueTable">
        <div class="divTableHeading">
            <div class="divTableRow">
                <div class="divTableHead"> </div>
                <div class="divTableHead">∅</div>
                <div class="divTableHead">Y</div> 
                <div class="divTableHead">H</div>
                <div class="divTableHead">B</div> 
            </div>
        </div>
        <div class="divTableBody">
            <!--First row-->
            <div class="divTableRow">
                <div class="divTableRowHead">A</div>
                <div class="divTableCell">
                    <Dropzone class="answer-container" Items="AList"  TItem="AnswerItem" Accepts='(d, t) => d.RomajiScript.Equals("a")' OnItemDropRejected="@((i)=>LastDropped = i)" MaxItems="1" OnItemDropRejectedByMaxItemLimit="ShowMaxItemWarning" OnItemDrop="@((i) => SuccessfulDrop())" >    
                        <div class="flex-item">
                            @if (textState == TextState.HiraganaMode)
                            {
                                @context.HiraganaScript
                            }
                            else
                            {
                                @context.KatakanaScript
                            }
                        </div> 
                    </Dropzone>
                </div>
                <div class="divTableCell">
                    <Dropzone class="answer-container" Items="YaList" TItem="AnswerItem" Accepts='(d, t) => d.RomajiScript.Equals("ya")' OnItemDropRejected="@((i)=>LastDropped = i)" MaxItems="1" OnItemDropRejectedByMaxItemLimit="ShowMaxItemWarning" OnItemDrop="@((i) => SuccessfulDrop())" >    
                        <div class="flex-item">
                            @if (textState == TextState.HiraganaMode)
                            {
                                @context.HiraganaScript 
                            }
                            else
                            {
                                @context.KatakanaScript
                            }
                        </div> 
                    </Dropzone>
                </div>
                <div class="divTableCell">
                    <Dropzone class="answer-container" Items="HaList" TItem="AnswerItem" Accepts='(d, t) => d.RomajiScript.Equals("ha")' OnItemDropRejected="@((i)=>LastDropped = i)" MaxItems="1" OnItemDropRejectedByMaxItemLimit="ShowMaxItemWarning" OnItemDrop="@((i) => SuccessfulDrop())" >    
                        <div class="flex-item">
                            @if (textState == TextState.HiraganaMode)
                            {
                                @context.HiraganaScript 
                            }
                            else
                            {
                                @context.KatakanaScript
                            }
                        </div> 
                    </Dropzone>
                </div>
                <div class="divTableCell">
                    <Dropzone class="answer-container" Items="BaList" TItem="AnswerItem" Accepts='(d, t) => d.RomajiScript.Equals("ba")' OnItemDropRejected="@((i)=>LastDropped = i)" MaxItems="1" OnItemDropRejectedByMaxItemLimit="ShowMaxItemWarning" OnItemDrop="@((i) => SuccessfulDrop())" >    
                        <div class="flex-item">
                            @if (textState == TextState.HiraganaMode)
                            {
                                @context.HiraganaScript 
                            }
                            else
                            {
                                @context.KatakanaScript
                            }
                        </div> 
                    </Dropzone>
                </div>
            </div>
            <!--Second row-->
            <div class="divTableRow">
                <div class="divTableRowHead">I</div>
                <div class="divTableCell">
                    <Dropzone class="answer-container" Items="IList" TItem="AnswerItem" Accepts='(d, t) => d.RomajiScript.Equals("i")' OnItemDropRejected="@((i)=>LastDropped = i)" MaxItems="1" OnItemDropRejectedByMaxItemLimit="ShowMaxItemWarning" OnItemDrop="@((i) => SuccessfulDrop())" >    
                        <div class="flex-item">
                            @if (textState == TextState.HiraganaMode)
                            {
                                @context.HiraganaScript 
                            }
                            else
                            {
                                @context.KatakanaScript
                            }
                        </div> 
                    </Dropzone>
                </div>
                <div class="divEmptyTableCell"></div>
                <div class="divTableCell">
                    <Dropzone class="answer-container" Items="HiList" TItem="AnswerItem" Accepts='(d, t) => d.RomajiScript.Equals("hi")' OnItemDropRejected="@((i)=>LastDropped = i)" MaxItems="1" OnItemDropRejectedByMaxItemLimit="ShowMaxItemWarning" OnItemDrop="@((i) => SuccessfulDrop())" >    
                        <div class="flex-item">
                            @if (textState == TextState.HiraganaMode)
                            {
                                @context.HiraganaScript 
                            }
                            else
                            {
                                @context.KatakanaScript
                            }
                        </div> 
                    </Dropzone>
                </div>
                <div class="divTableCell">
                    <Dropzone class="answer-container" Items="BiList" TItem="AnswerItem" Accepts='(d, t) => d.RomajiScript.Equals("bi")' OnItemDropRejected="@((i)=>LastDropped = i)" MaxItems="1" OnItemDropRejectedByMaxItemLimit="ShowMaxItemWarning" OnItemDrop="@((i) => SuccessfulDrop())" >    
                        <div class="flex-item">
                            @if (textState == TextState.HiraganaMode)
                            {
                                @context.HiraganaScript 
                            }
                            else
                            {
                                @context.KatakanaScript
                            }
                        </div> 
                    </Dropzone>
                </div>
            </div>
        </div>
    </div>
    <div class="@mixedButtonVisibility">
        <button class="btn btn-secondary" @onclick="SwapKana">Swap Kana</button>
    </div>
    <button class="btn btn-primary" @onclick="ResetGame">Reset</button>
</div>


@code{
    // Unfortunately the http client doesn't seem to want to work in the code behind file
    // So we've got to do this weirdness
    protected override async Task OnInitializedAsync()
    {
        masterAnswers = await Http.GetFromJsonAsync<Answers>("data/CharacterList.json");
    }
}